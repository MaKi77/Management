package com.rest.domain.device.entity;

import java.util.Objects;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

import com.google.common.base.Preconditions;

@Entity
public class CardEntity {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	private String identifier;
	private CardType type;
	private int typeId;
	private int serialNumber;
	private int partNumber;
	
	public CardEntity() {}
	
	private CardEntity(CardEntityBuilder builder) {
		this.id = builder.id;
		this.identifier = builder.identifier;
		this.type = builder.type;
		this.typeId = builder.typeId;
		this.serialNumber = builder.serialNumber;
		this.partNumber = builder.partNumber;
	}
	
	
	public int getId() {
		return id;
	}
	
	public String getIdentifier() {
		return identifier;
	}
	
	public CardType getType() {
		return type;
	}
	
	public int getTypeId() {
		return typeId;
	}
	
	public int getSerialNumber() {
		return serialNumber;
	}

	public int getPartNumber() {
		return partNumber;
	}
	
	
	public void ignoreSuppliedAutoGeneratedData() {
		id = 0;
		typeId = 0;
		identifier = null;
	}
	
	public void assignIdentifierForCard(String deviceIdentifier, int typeId) {
		identifier = deviceIdentifier + ":" + type + ":" + typeId;
		this.typeId = typeId;
	}
	
	public void updateCard(CardEntity cardEntity) {	
		Preconditions.checkArgument(isValid(cardEntity), "Wrong indentifier, type or typeId for card");
		serialNumber = cardEntity.getSerialNumber();
		partNumber = cardEntity.getPartNumber();
	}
	
	private boolean isValid(CardEntity cardEntity) {
		return (isTypeNotSupplied(cardEntity) || hasTheSameType(cardEntity))
				&& (isTypeIdNotSupplied(cardEntity) || hasTheSameTypeId(cardEntity))
				&& hasTheSameIdentfier(cardEntity);
	}
	
	private boolean hasTheSameType(CardEntity cardEntity) {
		return cardEntity.getType() == this.getType();
	}
	
	private boolean hasTheSameTypeId(CardEntity cardEntity) {
		return cardEntity.getTypeId() == this.getTypeId();
	}
	
	private boolean hasTheSameIdentfier(CardEntity cardEntity) {
		return cardEntity.getIdentifier().equals(this.getIdentifier());
	}
	
	private boolean isTypeNotSupplied(CardEntity cardEntity) {
		return cardEntity.getType() == null;
	}
	
	private boolean isTypeIdNotSupplied(CardEntity cardEntity) {
		return cardEntity.getTypeId() == 0;
	}
	
	@Override
	public boolean equals(Object other) {
		if (other == null) { 
			return false;
		} if (other == this) { 
	    	return true;
		} if (!(other instanceof CardEntity)) {
	    	return false;
		}
	    CardEntity otherCardEntity = (CardEntity)other;
	    if(otherCardEntity.getIdentifier() == null) {
	    	return false;
	    } if(otherCardEntity.getIdentifier().equals(getIdentifier())) {
	    	return true;
	    }
	    return false;
	}
	
	@Override
	public int hashCode() {
		return Objects.hash(identifier);
	}
	
	public static CardEntityBuilder builder() {
		return new CardEntityBuilder();
	}
	
	public static class CardEntityBuilder {
		
		private int id;
		private String identifier;
		private CardType type;
		private int typeId;
		private int serialNumber;
		private int partNumber;
		
		public CardEntityBuilder withId(int id) {
			this.id = id;
			return this;
		}
		
		public CardEntityBuilder withIdentifier(String identifier) {
			this.identifier = identifier;
			return this;
		}
		
		public CardEntityBuilder withType(CardType type) {
			this.type = type;
			return this;
		}
		
		public CardEntityBuilder withTypeId(int typeId) {
			this.typeId = typeId;
			return this;
		}
		
		public CardEntityBuilder withSerialNumber(int serialNumber) {
			this.serialNumber = serialNumber;
			return this;
		}
		
		public CardEntityBuilder withPartNumber(int partNumber) {
			this.partNumber = partNumber;
			return this;
		}
		
		public CardEntity build() {
			return new CardEntity(this);
		}	
		
	}
	
}